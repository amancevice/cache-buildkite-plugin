#!/bin/bash
set -euo pipefail

DIR="$(cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd)"

# shellcheck source=lib/shared.bash
. "${DIR}/../lib/shared.bash"

RESTORE_PATH=$(plugin_read_config PATH)

if [ -z "${RESTORE_PATH}" ] ; then
  echo "+++ ðŸš¨ Missing path option in the cache plugin to restore"
  exit 1
fi

MAX_LEVEL=$(plugin_read_config RESTORE 'no')
if [ "${MAX_LEVEL}" = 'no' ]; then
  echo 'Cache not setup for restoring'
  exit 0
elif [ "${MAX_LEVEL}" = 'file' ] && [ -z "$(plugin_read_config MANIFEST)" ]; then
  echo "+++ ðŸš¨ Missing manifest option in the cache plugin for file-level restore"
  exit 1
fi

SORTED_LEVELS=(file step branch pipeline all)

for CURRENT_LEVEL in "${SORTED_LEVELS[@]}"; do
  if [ "${CURRENT_LEVEL}" = 'file' ] && [ -z "$(plugin_read_config MANIFEST)" ]; then
    continue
  fi

  KEY=$(build_key "${CURRENT_LEVEL}" "${RESTORE_PATH}")
  if backend_exec exists "${KEY}"; then
    echo "Cache hit at level ${CURRENT_LEVEL}, restoring..."
    backend_exec get "${KEY}" "${RESTORE_PATH}"
  elif [ "${CURRENT_LEVEL}" = "${MAX_LEVEL}" ]; then
    echo 'Cache miss, sorry'
  fi
done
