#!/bin/bash
set -euo pipefail

DIR="$(cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd)"

# shellcheck source=lib/shared.bash
. "$DIR/../lib/shared.bash"

if [[ -z "${BUILDKITE_AGENT_CACHE_PATH:-}" ]] ; then
  echo "+++ ðŸš¨ BUILDKITE_AGENT_CACHE_PATH must be set for the cache plugin"
  exit 1
fi

# Iterate through cache entries
for entry in $(list_cache_entries) ; do
  entry_path_prop="${entry}_PATH"
  entry_manifest_prop="${entry}_MANIFEST"
  entry_scope_prop="${entry}_SCOPES"

  entry_path=${!entry_path_prop}
  entry_manifest=${!entry_manifest_prop:-}

  # Process each path for the defined scopes
  while IFS=$'\n' read -r scope ; do
    case "$scope" in
    manifest)
      manifest_path=$(build_manifest_cache_path "$entry_manifest")
      if [[ ! -e $manifest_path ]] ; then
        echo "~~~ Caching ${entry_path} to ${manifest_path}"
        save_cache "${entry_path}" "${manifest_path}"
      else
        echo "~~~ Skipping $scope cache, already exists"
      fi
      ;;
    *)
      echo >&2 "Unsupported scope '$scope'"
      return 1
      ;;
    esac
  done <<< "$(prefix_read_list "$entry_scope_prop")"
done
