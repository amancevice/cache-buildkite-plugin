#!/bin/bash

if [ -z "${BUILDKITE_PLUGIN_S3_CACHE_BUCKET}" ]; then
  echo '+++ ðŸš¨ Missing S3 bucket configuration'
  exit 1
fi

build_key() {
  if [ -n "${BUILDKITE_PLUGIN_S3_CACHE_PREFIX}" ]; then
    echo "${BUILDKITE_PLUGIN_S3_CACHE_PREFIX}/${1}"
  else
    echo "$1"
  fi
}

s3_sync() {
  local from="$1"
  local to="$2"

  aws_cmd=(aws s3 sync)
  if [ -n "${BUILDKITE_PLUGIN_S3_CACHE_ONLY_SHOW_ERRORS}" ]; then
    aws_cmd+=(--only-show-errors)
  fi

  # echo "Symbol: ${aws_cmd[*]}"
  # echo "From: ${from}"
  # echo "To: ${to}"

  "${aws_cmd[@]}" "${from}" "${to}"
}

restore_cache() {
  local from="$1"
  local to="$2"
  s3_sync "s3://${BUILDKITE_PLUGIN_S3_CACHE_BUCKET}/$(build_key "${from}")" "${to}"
}

save_cache() {
  local to="$1"
  local from="$2"
  s3_sync "${from}" "s3://${BUILDKITE_PLUGIN_S3_CACHE_BUCKET}/$(build_key "${to}")"
}

exists_cache() {
  if [ -z "$1" ]; then exit 1; fi
  [ -n "$(aws s3api list-objects-v2 --bucket "${BUILDKITE_PLUGIN_S3_CACHE_BUCKET}" --prefix "$(build_key "$1")" --max-items 1)" ]
}

OPCODE="$1"
shift

if [ "$OPCODE" = 'exists' ]; then
  exists_cache "$@"
elif [ "$OPCODE" = 'get' ]; then
  restore_cache "$@"
elif [ "$OPCODE" = 'save' ]; then
  save_cache "$@"
else
  exit 255
fi
